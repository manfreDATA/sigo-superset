version: "3.8"

services:
  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-superset}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-superset}
      POSTGRES_DB: ${POSTGRES_DB:-superset}
    volumes:
      - superset_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-superset} -d ${POSTGRES_DB:-superset} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  superset:
    # Build the local dev image (uses the same Dockerfile in superset/docker/)
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: ${SUPERSET_IMAGE:-sigo-superset:dev}
    env_file:
      - ./docker/.env-local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${SUPERSET_PORT:-8088}:8088"
    volumes:
      # In dev mode we keep pythonpath_dev writable so you can iterate on config
      - ./docker/pythonpath_dev:/app/pythonpath_dev:rw
      # Persist uploads locally
      - superset_uploads:/app/superset_home/uploads
      # Optional: uncomment and adjust to mount local superset code for live edits
      # - ../:/app/superset_local:ro
    environment:
      PYTHONPATH: "/app/pythonpath_dev:${PYTHONPATH:-}"
      SUPERSET_CONFIG_PATH: "/app/pythonpath_dev/superset_config_docker.py"
      SUPERSET_ENV: "development"
      FLASK_ENV: "development"
      # Enable debug logging in dev if you like (also controllable from superset_config)
      # SUPERSET_LOG_LEVEL: "DEBUG"
    command: >
      /bin/bash -c "superset run -p ${SUPERSET_PORT:-8088} --with-threads --reload"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SUPERSET_PORT:-8088}/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 6

  superset-init:
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: ${SUPERSET_IMAGE:-sigo-superset:dev}
    env_file:
      - ./docker/.env-local
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./docker/pythonpath_dev:/app/pythonpath_dev:rw
      - superset_uploads:/app/superset_home/uploads
    environment:
      PYTHONPATH: "/app/pythonpath_dev:${PYTHONPATH:-}"
      SUPERSET_CONFIG_PATH: "/app/pythonpath_dev/superset_config_docker.py"
    entrypoint: /bin/bash
    command:
      - -c
      - |
        set -euo pipefail
        echo "Waiting for Postgres..."
        until pg_isready -h db -U "${POSTGRES_USER:-superset}" -d "${POSTGRES_DB:-superset}"; do
          sleep 1
        done
        echo "Running superset db upgrade..."
        superset db upgrade
        echo "Initializing superset..."
        superset init
        if [ -n "${SUPERSET_ADMIN_USERNAME:-}" ] && [ -n "${SUPERSET_ADMIN_EMAIL:-}" ] && [ -n "${SUPERSET_ADMIN_PASSWORD:-}" ]; then
          echo "Creating admin user ${SUPERSET_ADMIN_USERNAME} (if not exists)"
          superset fab create-admin --username "${SUPERSET_ADMIN_USERNAME}" --firstname "${SUPERSET_ADMIN_FIRSTNAME:-Admin}" --lastname "${SUPERSET_ADMIN_LASTNAME:-User}" --email "${SUPERSET_ADMIN_EMAIL}" --password "${SUPERSET_ADMIN_PASSWORD}" || true
        fi
        echo "superset-init complete."
    restart: "no"

  worker:
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: ${SUPERSET_IMAGE:-sigo-superset:dev}
    env_file:
      - ./docker/.env-local
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./docker/pythonpath_dev:/app/pythonpath_dev:rw
      - superset_uploads:/app/superset_home/uploads
    environment:
      PYTHONPATH: "/app/pythonpath_dev:${PYTHONPATH:-}"
      SUPERSET_CONFIG_PATH: "/app/pythonpath_dev/superset_config_docker.py"
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
    command: >
      celery -A superset.tasks.celery_app.celery_app worker --loglevel INFO
    restart: unless-stopped

  flower:
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: ${SUPERSET_IMAGE:-sigo-superset:dev}
    env_file:
      - ./docker/.env-local
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./docker/pythonpath_dev:/app/pythonpath_dev:rw
      - superset_uploads:/app/superset_home/uploads
    environment:
      PYTHONPATH: "/app/pythonpath_dev:${PYTHONPATH:-}"
      SUPERSET_CONFIG_PATH: "/app/pythonpath_dev/superset_config_docker.py"
    command: >
      celery -A superset.tasks.celery_app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    restart: unless-stopped

volumes:
  superset_db:
  redis_data:
  superset_uploads: